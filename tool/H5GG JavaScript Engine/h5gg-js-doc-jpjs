h5gg はエンジンオブジェクトで、以下の関数を呼び出せます（Android GG の Lua インターフェースと似ていますが、パラメータが若干異なります）

h5gg.require(H5GG バージョン番号); //スクリプトで必要な最小 H5GG バージョンを設定。スクリプト先頭の最初の行に記述可能

h5gg.setFloatTolerance('浮動小数点の許容誤差'); //F32/F64 浮動小数点検索の誤差範囲を設定。エンジン初期値は 0.0

h5gg.searchNumber('値', '型', '検索下限', '検索上限'); //正確な値の検索または二次検索（絞り込み）

h5gg.searchNearby('値', '型', '近傍範囲'); //近傍（結合）検索、IGG と同様

h5gg.getValue('アドレス', '型'); //指定アドレスの値を読み取り、値の文字列を返す

h5gg.setValue('アドレス', '値', '型'); //指定アドレスの値を設定し、成功/失敗を返す

h5gg.editAll('値', '型'); //検索結果の全値を変更（結果クリア後は呼び出せない）、成功変更数を返す

h5gg.getResultsCount(); //検索結果の総数を取得

h5gg.getResults('取得数', 'スキップ数'); //結果配列を取得。各要素は address, value, type の3属性を持つ

h5gg.clearResults(); //検索結果をクリアし、新規検索を開始

h5gg.getRangesList('モジュールファイル名'); //モジュール配列を返す。モジュールは start（ベースアドレス）, end（終了アドレス）, name（パス）属性を持つ
（モジュールファイル名=0 の場合、APP メインプログラムモジュール情報を返す。引数なしの場合、全モジュールリストを返す）

h5gg.loadPlugin('Objective-C クラス名', 'dylib ファイルパス'); //dylib プラグインをロードし、OC インスタンスオブジェクトを返す（返されたOCオブジェクトはjsで直接呼び出し可能。dylibは絶対パスまたは.app内の相対パスをサポート）

※スタンドアロン CrosProc APP 版のみ:

h5gg.setTargetProc(プロセス番号); //現在のターゲットプロセスを設定し、成功/失敗を返す

h5gg.getProcList('プロセス名'); //プロセス配列を取得。配列要素は pid（プロセス番号）, name（プロセス名）属性を持つ
（プロセス名未指定の場合、実行中の全アプリプロセスリストを返す。定期的に呼び出してターゲットプロセス終了を判定可能）

その他 API:

setButtonImage(アイコン); //フロートボタンのアイコンを設定。httpから始まるURL画像またはbase64エンコードされたDataURL画像を指定可能

setButtonAction(jsコールバック関数); //カスタムフロートボタンクリックアクションを設定。js関数を渡すとクリック時に呼び出される

setWindowRect(x, y, 幅, 高さ); //画面上のフロートウィンドウの位置とサイズを変更

setWindowDrag(x, y, 幅, 高さ); //H5ページ内でドラッグ可能なフロートウィンドウ領域を設定

setWindowTouch(タッチ応答の有無); //true=フロートウィンドウ全体がタッチをブロック, false=タッチ透過可能

setWindowVisible(表示の有無); //フロートウィンドウの可視性を設定。true=表示, false=非表示

setLayoutAction(jsコールバック関数); //画面回転やiPad分割画面時のコールバックを設定。コールバック関数の引数は
